<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Table7_2012to2018' inline='true' name='federated.0jbul4p00bu0o017wgp790480ki0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table7_2012to2018' name='textscan.19odtdt09023io1aue0x01k187wd'>
            <connection class='textscan' directory='G:/Shared drives/HDA/Brown Family/02 Data/02 R/R Project/CHAS' filename='Table7_2012to2018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19odtdt09023io1aue0x01k187wd' name='Table7_2012to2018.csv' table='[Table7_2012to2018#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='integer' name='Estimate' ordinal='2' />
            <column datatype='integer' name='MOE' ordinal='3' />
            <column datatype='string' name='source' ordinal='4' />
            <column datatype='integer' name='sumlevel' ordinal='5' />
            <column datatype='string' name='geoid' ordinal='6' />
            <column datatype='string' name='county' ordinal='7' />
            <column datatype='string' name='state' ordinal='8' />
            <column datatype='integer' name='st' ordinal='9' />
            <column datatype='integer' name='cnty' ordinal='10' />
            <column datatype='integer' name='fips' ordinal='11' />
            <column datatype='string' name='Line_Type' ordinal='12' />
            <column datatype='string' name='Tenure' ordinal='13' />
            <column datatype='string' name='Household income' ordinal='14' />
            <column datatype='string' name='Household type' ordinal='15' />
            <column datatype='string' name='Cost burden' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19odtdt09023io1aue0x01k187wd' name='Table7_2012to2018.csv' table='[Table7_2012to2018#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='integer' name='Estimate' ordinal='2' />
            <column datatype='integer' name='MOE' ordinal='3' />
            <column datatype='string' name='source' ordinal='4' />
            <column datatype='integer' name='sumlevel' ordinal='5' />
            <column datatype='string' name='geoid' ordinal='6' />
            <column datatype='string' name='county' ordinal='7' />
            <column datatype='string' name='state' ordinal='8' />
            <column datatype='integer' name='st' ordinal='9' />
            <column datatype='integer' name='cnty' ordinal='10' />
            <column datatype='integer' name='fips' ordinal='11' />
            <column datatype='string' name='Line_Type' ordinal='12' />
            <column datatype='string' name='Tenure' ordinal='13' />
            <column datatype='string' name='Household income' ordinal='14' />
            <column datatype='string' name='Household type' ordinal='15' />
            <column datatype='string' name='Cost burden' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Estimate]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MOE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MOE]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>MOE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumlevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sumlevel]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>sumlevel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geoid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geoid]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>geoid</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>st</remote-name>
            <remote-type>20</remote-type>
            <local-name>[st]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>st</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cnty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cnty]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>cnty</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Line_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Line_Type]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Line_Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tenure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tenure]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Tenure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Household income]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Household income</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Household type]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Household type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost burden</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cost burden]</local-name>
            <parent-name>[Table7_2012to2018.csv]</parent-name>
            <remote-alias>Cost burden</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Households' datatype='integer' name='[Calculation_1472677118581948416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Estimate]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percent Cost-Burdened' datatype='real' name='[Calculation_1472677118582149121]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1472677118582939650])/[Calculation_1472677118581948416]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cost-burdened total' datatype='integer' name='[Calculation_1472677118582939650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Cost burden (group)] = &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END' />
      </column>
      <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
          <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
            <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
            <value>&quot;housing cost burden is greater than 50\%&quot;</value>
            <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
            <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
          <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
          <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
          <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
        </aliases>
      </column>
      <column caption='Cost-burdened total (copy)' datatype='integer' name='[Cost-burdened total (copy)_1791025324975583236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Calculation_1472677118582939650]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
      <column caption='Household income (group) (copy)' datatype='string' name='[Household income (group) (copy)_1129840597272334336]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
          <bin default-name='false' value='&quot;Low-income or lower (80\% AMI or less)&quot;'>
            <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
            <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
            <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Moderate income or higher (Greater than 80\% AMI)&quot;'>
            <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
            <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
          <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
            <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
            <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
            <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
            <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
            <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
          <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
          <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
          <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
          <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
        </aliases>
      </column>
      <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
          <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
          <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
          <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
          <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
        </aliases>
      </column>
      <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Table7_2012to2018.csv' datatype='table' name='[__tableau_internal_object_id__].[Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C]' role='measure' type='quantitative' />
      <column caption='Cnty' datatype='integer' name='[cnty]' role='measure' type='quantitative' />
      <column datatype='string' name='[county (copy) (group)]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[county (copy)_1262415318767104000]' new-bin='true'>
          <bin default-name='false' value='&quot;Surrounding localities&quot;'>
            <value>&quot;Chesterfield County&quot;</value>
            <value>&quot;Colonial Heights city&quot;</value>
            <value>&quot;Dinwiddie County&quot;</value>
            <value>&quot;Hopewell city&quot;</value>
            <value>&quot;Petersburg city&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='county (copy)' datatype='string' name='[county (copy)_1262415318767104000]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='[county]' />
      </column>
      <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='51515' value='&quot;Bedford&quot;' />
        </semantic-values>
      </column>
      <column caption='Geoid' datatype='string' name='[geoid]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='St' datatype='integer' name='[st]' role='measure' type='quantitative' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sumlevel' datatype='integer' name='[sumlevel]' role='measure' type='quantitative' />
      <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
      <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Household income (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[county (copy) (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Prince George County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surrounding localities&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Year:ok]' type='palette'>
            <map to='#192e5b'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
            <map to='#66bdc3'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[tyr:Year:ok]' type='shape'>
            <map to=':filled/circle'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
            <map to='circle'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cost burden:nk]' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;housing cost burden is greater than 50\%&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;housing cost burden is less than or equal to 30\%&quot;</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;housing cost burden not computed (household has no/negative income)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Cost burden (group)]' type='palette'>
            <map to='#d5d5d5'>
              <bucket>&quot;Not cost-burdened (&lt;30\%)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Table7_2012to2018.csv' id='Table7_2012to2018.csv_55E0D44B96B44F4E92379F4EADA1B96C'>
            <properties context=''>
              <relation connection='textscan.19odtdt09023io1aue0x01k187wd' name='Table7_2012to2018.csv' table='[Table7_2012to2018#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='integer' name='Estimate' ordinal='2' />
                  <column datatype='integer' name='MOE' ordinal='3' />
                  <column datatype='string' name='source' ordinal='4' />
                  <column datatype='integer' name='sumlevel' ordinal='5' />
                  <column datatype='string' name='geoid' ordinal='6' />
                  <column datatype='string' name='county' ordinal='7' />
                  <column datatype='string' name='state' ordinal='8' />
                  <column datatype='integer' name='st' ordinal='9' />
                  <column datatype='integer' name='cnty' ordinal='10' />
                  <column datatype='integer' name='fips' ordinal='11' />
                  <column datatype='string' name='Line_Type' ordinal='12' />
                  <column datatype='string' name='Tenure' ordinal='13' />
                  <column datatype='string' name='Household income' ordinal='14' />
                  <column datatype='string' name='Household type' ordinal='15' />
                  <column datatype='string' name='Cost burden' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Household type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9' italic='true'>Share of senior cost burden in Prince George County from 2012 to 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Not cost-burdened (&lt;30\%)&quot;</bucket>
              <bucket>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Household type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
                <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
                <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;</bucket>
              <bucket>&quot;household type is elderly non-family&quot;</bucket>
              <bucket>&quot;household type is large family (5 or more persons)&quot;</bucket>
              <bucket>&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;</bucket>
              <bucket>&quot;other household type (non-elderly non-family)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='break-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;</value>
                <value>2018</value>
                <value>0.13043478260869565</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;household type is elderly non-family&quot;</value>
                <value>2018</value>
                <value>0.271356783919598</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;household type is elderly non-family&quot;</value>
                <value>2012</value>
                <value>0.30359085963003263</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;</value>
                <value>2012</value>
                <value>0.14021669853409816</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;household type is elderly non-family&quot;</value>
                <value>2016</value>
                <value>0.2383025027203482</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{74E870AD-B63A-49BB-8B76-121AF54B9E53}' />
    </worksheet>
    <worksheet name='Income HO'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9' italic='true'>Cost burden by homeowner household income from 2012 to 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Cost-burdened total' datatype='integer' name='[Calculation_1472677118582939650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cost burden (group)] = &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END' />
            </column>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column caption='Cost-burdened total (copy)' datatype='integer' name='[Cost-burdened total (copy)_1791025324975583236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Calculation_1472677118582939650]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1472677118582939650]' derivation='Sum' name='[sum:Calculation_1472677118582939650:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Cost-burdened total (copy)_1791025324975583236]' derivation='User' name='[usr:Cost-burdened total (copy)_1791025324975583236:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;housing cost burden is less than or equal to 30\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden not computed (household has no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='8' />
            <format attr='font-weight' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='normal' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='break-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' value='240' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[sum:Calculation_1472677118582939650:qk]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Cost-burdened total (copy)_1791025324975583236:qk:2]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{B065F5CD-20D7-48CE-B3D7-CA5ABE22B55F}' />
    </worksheet>
    <worksheet name='Income PGC'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0jbul4p00bu0o017wgp790480ki0].[sum:Estimate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk])</rows>
        <cols>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</cols>
      </table>
      <simple-id uuid='{16291BCC-D28E-41DA-B28D-1DBFB30D0CA8}' />
    </worksheet>
    <worksheet name='Income PGC cb'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county (copy) (group)]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[county (copy)_1262415318767104000]' new-bin='true'>
                <bin default-name='false' value='&quot;Surrounding localities&quot;'>
                  <value>&quot;Chesterfield County&quot;</value>
                  <value>&quot;Colonial Heights city&quot;</value>
                  <value>&quot;Dinwiddie County&quot;</value>
                  <value>&quot;Hopewell city&quot;</value>
                  <value>&quot;Petersburg city&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='county (copy)' datatype='string' name='[county (copy)_1262415318767104000]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='[county]' />
            </column>
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county (copy) (group)]' member='&quot;Prince George County&quot;' />
              <groupfilter function='member' level='[county (copy) (group)]' member='&quot;Surrounding localities&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' scope='rows' value='' />
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='82' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='101' />
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='57' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='false' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='8' />
            <format attr='text-orientation' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='-90' />
            <format attr='text-orientation' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='0' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)])</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Extremely Low-Income (30\% AMI or less)&quot;</value>
                <value>&quot;Prince George County&quot;</value>
                <value>0.91695501730103801</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Extremely Low-Income (30\% AMI or less)&quot;</value>
                <value>&quot;Surrounding localities&quot;</value>
                <value>0.81737677527151209</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Very Low-Income (31 to 50\% AMI)&quot;</value>
                <value>&quot;Prince George County&quot;</value>
                <value>0.60554371002132201</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Very Low-Income (31 to 50\% AMI)&quot;</value>
                <value>&quot;Surrounding localities&quot;</value>
                <value>0.54546579240381043</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{2427411C-708F-4A33-9460-54E5BC17C3D1}' />
    </worksheet>
    <worksheet name='Income PGC cb (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county (copy) (group)]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[county (copy)_1262415318767104000]' new-bin='true'>
                <bin default-name='false' value='&quot;Surrounding localities&quot;'>
                  <value>&quot;Chesterfield County&quot;</value>
                  <value>&quot;Colonial Heights city&quot;</value>
                  <value>&quot;Dinwiddie County&quot;</value>
                  <value>&quot;Hopewell city&quot;</value>
                  <value>&quot;Petersburg city&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='county (copy)' datatype='string' name='[county (copy)_1262415318767104000]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='[county]' />
            </column>
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county (copy) (group)]' member='&quot;Prince George County&quot;' />
              <groupfilter function='member' level='[county (copy) (group)]' member='&quot;Surrounding localities&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' scope='rows' value='' />
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='82' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='101' />
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='57' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='false' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='8' />
            <format attr='text-orientation' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='-90' />
            <format attr='text-orientation' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='0' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)])</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Extremely Low-Income (30\% AMI or less)&quot;</value>
                <value>&quot;Prince George County&quot;</value>
                <value>0.91695501730103801</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Extremely Low-Income (30\% AMI or less)&quot;</value>
                <value>&quot;Surrounding localities&quot;</value>
                <value>0.81737677527151209</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Very Low-Income (31 to 50\% AMI)&quot;</value>
                <value>&quot;Prince George County&quot;</value>
                <value>0.60554371002132201</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Very Low-Income (31 to 50\% AMI)&quot;</value>
                <value>&quot;Surrounding localities&quot;</value>
                <value>0.54546579240381043</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{19D45F57-C35E-462B-9E9A-B7B39A15BFC7}' />
    </worksheet>
    <worksheet name='Income RO'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9' italic='true'>Cost burden by renter household income from 2012 to 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Cost-burdened total' datatype='integer' name='[Calculation_1472677118582939650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cost burden (group)] = &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END' />
            </column>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column caption='Cost-burdened total (copy)' datatype='integer' name='[Cost-burdened total (copy)_1791025324975583236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Calculation_1472677118582939650]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1472677118582939650]' derivation='Sum' name='[sum:Calculation_1472677118582939650:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Cost-burdened total (copy)_1791025324975583236]' derivation='User' name='[usr:Cost-burdened total (copy)_1791025324975583236:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;housing cost burden is less than or equal to 30\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden not computed (household has no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Renter occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='8' />
            <format attr='font-weight' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='normal' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='break-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' value='240' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[sum:Calculation_1472677118582939650:qk]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' />
              <tooltip column='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Cost-burdened total (copy)_1791025324975583236:qk:2]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:2]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{D1BF2C11-F3B9-4A42-9498-AE47999CED18}' />
    </worksheet>
    <worksheet name='Income TRI cb'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9' italic='true'>Cost burden by homeowner household income in surrounding localities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Chesterfield County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Colonial Heights city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Dinwiddie County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Hopewell city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Petersburg city&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='101' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='false' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{F6A217A9-904C-4C66-95C4-FC52E88F9563}' />
    </worksheet>
    <worksheet name='Income Tricities'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;housing cost burden is less than or equal to 30\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden not computed (household has no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Chesterfield County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Colonial Heights city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Dinwiddie County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Hopewell city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Petersburg city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
            <format attr='break-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{2D5382BC-C39B-416B-965A-BBBC076E27E4}' />
    </worksheet>
    <worksheet name='Income Tricities (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Cost-burdened total' datatype='integer' name='[Calculation_1472677118582939650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cost burden (group)] = &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Household income (group) (copy)' datatype='string' name='[Household income (group) (copy)_1129840597272334336]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Low-income or lower (80\% AMI or less)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate income or higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1472677118582939650]' derivation='Sum' name='[sum:Calculation_1472677118582939650:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Chesterfield County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Colonial Heights city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Dinwiddie County&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Hopewell city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Petersburg city&quot;' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Prince George County&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jbul4p00bu0o017wgp790480ki0].[sum:Calculation_1472677118582939650:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group) (copy)_1129840597272334336] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{E6FD49CC-C691-4702-9759-04EF5FE0AC6F}' />
    </worksheet>
    <worksheet name='Income VA cb'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column caption='Percent Total Cost burden' datatype='real' name='[Calculation_1791025324974338051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM(IF [Cost burden (group)]= &quot;Cost-burdened (Greater than 30% or no/negative income)&quot; THEN [Estimate]&#13;&#10;END))/TOTAL(SUM([Estimate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cost burden]' new-bin='true'>
                <bin default-name='false' value='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;'>
                  <value>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</value>
                  <value>&quot;housing cost burden is greater than 50\%&quot;</value>
                  <value>&quot;housing cost burden not computed (household has no/negative income)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not cost-burdened (&lt;30\%)&quot;'>
                  <value>&quot;housing cost burden is less than or equal to 30\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791025324974338051]' derivation='User' name='[usr:Calculation_1791025324974338051:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Cost burden (group)]' />
              <groupfilter function='member' level='[Cost burden (group)]' member='&quot;Not cost-burdened (&lt;30\%)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Not cost-burdened (&lt;30\%)&quot;</bucket>
              <bucket>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='101' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]' value='false' />
            <format attr='font-size' field='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;Extremely Low-Income (30\% AMI or less)&quot;</value>
                <value>2018</value>
                <value>0.83743165594512059</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok]</field>
                  <field>[federated.0jbul4p00bu0o017wgp790480ki0].[usr:Calculation_1791025324974338051:qk:7]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cost-burdened (Greater than 30\% or no/negative income)&quot;</value>
                <value>&quot;Very Low-Income (31 to 50\% AMI)&quot;</value>
                <value>2018</value>
                <value>0.56672318577080483</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{81425174-185F-471E-A0CB-17C7E46D6D56}' />
    </worksheet>
    <worksheet name='Income Virginia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table7_2012to2018' name='federated.0jbul4p00bu0o017wgp790480ki0' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbul4p00bu0o017wgp790480ki0'>
            <column datatype='string' name='[Cost burden]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' value='Cost-burdened (31 to 50%)' />
                <alias key='&quot;housing cost burden is greater than 50\%&quot;' value='Severely cost-burdened (&gt;50%)' />
                <alias key='&quot;housing cost burden is less than or equal to 30\%&quot;' value='Not cost-burdened (&lt;30%)' />
                <alias key='&quot;housing cost burden not computed (household has no/negative income)&quot;' value='No or negative income' />
              </aliases>
            </column>
            <column datatype='integer' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Household income (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Household income]' new-bin='true'>
                <bin default-name='false' value='&quot;Extremely Low-Income (30\% AMI or less)&quot;'>
                  <value>&quot;household income is less than or equal to 30\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low-Income (51 to 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderate Income or Higher (Greater than 80\% AMI)&quot;'>
                  <value>&quot;household income is greater than 100\% of HAMFI&quot;</value>
                  <value>&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Very Low-Income (31 to 50\% AMI)&quot;'>
                  <value>&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Household income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household income is greater than 100\% of HAMFI&quot;' value='Greater than 100% AMI' />
                <alias key='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' value='31 to 50% AMI' />
                <alias key='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' value='51 to 80% AMI' />
                <alias key='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' value='81 to 100% AMI' />
                <alias key='&quot;household income is less than or equal to 30\% of HAMFI&quot;' value='30% AMI or less' />
              </aliases>
            </column>
            <column datatype='string' name='[Household type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' value='Elderly family' />
                <alias key='&quot;household type is elderly non-family&quot;' value='Elderly non-family' />
                <alias key='&quot;household type is large family (5 or more persons)&quot;' value='Large family' />
                <alias key='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' value='Small family' />
                <alias key='&quot;other household type (non-elderly non-family)&quot;' value='Non-elderly non-family' />
              </aliases>
            </column>
            <column caption='Line Type' datatype='string' name='[Line_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tenure]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Cost burden]' derivation='None' name='[none:Cost burden:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household income]' derivation='None' name='[none:Household income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household type]' derivation='None' name='[none:Household type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Line_Type]' derivation='None' name='[none:Line_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tenure]' derivation='None' name='[none:Tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[pcto:sum:Estimate:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extremely Low-Income (30\% AMI or less)&quot;</bucket>
              <bucket>&quot;31 to 50\% AMI&quot;</bucket>
              <bucket>&quot;Very Low-Income (31 to 50\% AMI)&quot;</bucket>
              <bucket>&quot;51 to 80\% AMI&quot;</bucket>
              <bucket>&quot;Low-Income (51 to 80\% AMI)&quot;</bucket>
              <bucket>&quot;Greater than 80\% AMI&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <groupfilter from='&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;' function='range' level='[none:Cost burden:nk]' to='&quot;housing cost burden not computed (household has no/negative income)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;housing cost burden is less than or equal to 30\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden is greater than 30\% but less than or equal to 50\%&quot;</bucket>
              <bucket>&quot;housing cost burden not computed (household has no/negative income)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 30\% but less than or equal to 50\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 50\% but less than or equal to 80\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is greater than 80\% but less than or equal to 100\% of HAMFI&quot;' />
              <groupfilter function='member' level='[none:Household income:nk]' member='&quot;household income is less than or equal to 30\% of HAMFI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly family (2 persons, with either or both age 62 or over)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is elderly non-family&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is large family (5 or more persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)&quot;' />
              <groupfilter function='member' level='[none:Household type:nk]' member='&quot;other household type (non-elderly non-family)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]'>
            <groupfilter function='member' level='[none:Line_Type:nk]' member='&quot;Detail&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]'>
            <groupfilter function='member' level='[none:Tenure:nk]' member='&quot;Owner occupied&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household income:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Household type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Line_Type:nk]</column>
            <column>[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
            <format attr='break-on-special' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jbul4p00bu0o017wgp790480ki0].[pcto:sum:Estimate:qk:3]</rows>
        <cols>([federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)] / [federated.0jbul4p00bu0o017wgp790480ki0].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{905D35F0-A2F4-4CDC-877A-A3F53104F91B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style />
      <size maxheight='400' maxwidth='700' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='77281' id='7' param='horz' type-v2='layout-flow' w='97714' x='1143' y='11718'>
            <zone h='77281' id='5' type-v2='layout-basic' w='97714' x='1143' y='11718'>
              <zone h='77281' id='3' name='Income PGC cb' w='97714' x='1143' y='11718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9718' id='10' type-v2='text' w='97714' x='1143' y='2000'>
            <formatted-text>
              <run fontname='Tableau Semibold' fontsize='12'>Cost burden by homeowner income and area</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='9001' id='11' type-v2='text' w='97714' x='1143' y='88999'>
            <formatted-text>
              <run bold='true' fontsize='8'>Source: </run>
              <run fontsize='8'>HUD, Comprehensive Housing Affordability Strategy, 2018 5-year estimates, Table 7.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='22' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='9718' id='10' type-v2='text' w='97714' x='1143' y='2000'>
                  <formatted-text>
                    <run fontname='Tableau Semibold' fontsize='12'>Cost burden by homeowner income and area</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77281' id='3' is-fixed='true' name='Income PGC cb' w='97714' x='1143' y='11718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9001' id='11' type-v2='text' w='97714' x='1143' y='88999'>
                  <formatted-text>
                    <run bold='true' fontsize='8'>Source: </run>
                    <run fontsize='8'>HUD, Comprehensive Housing Affordability Strategy, 2018 5-year estimates, Table 7.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3B253A27-FA79-4136-BBD6-C99E1D497373}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='PGC HO INCOME'>
      <style />
      <size maxheight='500' maxwidth='700' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96800' id='19' param='horz' type-v2='layout-flow' w='97714' x='1143' y='1600'>
            <zone h='96800' id='15' type-v2='layout-basic' w='97714' x='1143' y='1600'>
              <zone h='73534' id='7' param='horz' type-v2='layout-flow' w='97714' x='1143' y='9666'>
                <zone h='73534' id='5' type-v2='layout-basic' w='97714' x='1143' y='9666'>
                  <zone h='73534' id='14' name='Income HO' w='97714' x='1143' y='9666'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='8066' id='10' type-v2='text' w='97714' x='1143' y='1600'>
                <formatted-text>
                  <run fontname='Tableau Semibold' fontsize='12'>Homeowner cost burden by income</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='15200' id='11' type-v2='text' w='26571' x='72286' y='83200'>
                <formatted-text>
                  <run bold='true' fontsize='8'>Source:</run>
                  <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15200' id='20' name='Income HO' pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type-v2='color' w='71143' x='1143' y='83200'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='35' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='8066' id='10' type-v2='text' w='97714' x='1143' y='1600'>
                  <formatted-text>
                    <run fontname='Tableau Semibold' fontsize='12'>Homeowner cost burden by income</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73534' id='14' is-fixed='true' name='Income HO' w='97714' x='1143' y='9666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15200' id='20' name='Income HO' pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type-v2='color' w='71143' x='1143' y='83200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='15200' id='11' type-v2='text' w='26571' x='72286' y='83200'>
                  <formatted-text>
                    <run bold='true' fontsize='8'>Source:</run>
                    <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AE7CB3C0-99DE-430C-8938-360410C2E3A2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='PGC RO INCOME'>
      <style />
      <size maxheight='500' maxwidth='700' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='69134' id='7' param='horz' type-v2='layout-flow' w='97714' x='1143' y='9666'>
            <zone h='69134' id='5' type-v2='layout-basic' w='97714' x='1143' y='9666'>
              <zone h='69134' id='3' name='Income RO' w='97714' x='1143' y='9666'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='19600' id='9' name='Income RO' pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type-v2='color' w='73857' x='1143' y='78800'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8066' id='10' type-v2='text' w='97714' x='1143' y='1600'>
            <formatted-text>
              <run fontname='Tableau Semibold' fontsize='12'>Renter cost burden by income</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='19600' id='11' type-v2='text' w='23857' x='75000' y='78800'>
            <formatted-text>
              <run bold='true' fontsize='8'>Source:</run>
              <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='28' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8066' id='10' type-v2='text' w='97714' x='1143' y='1600'>
                  <formatted-text>
                    <run fontname='Tableau Semibold' fontsize='12'>Renter cost burden by income</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69134' id='3' is-fixed='true' name='Income RO' w='97714' x='1143' y='9666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19600' id='9' name='Income RO' pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type-v2='color' w='73857' x='1143' y='78800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='19600' id='11' type-v2='text' w='23857' x='75000' y='78800'>
                  <formatted-text>
                    <run bold='true' fontsize='8'>Source:</run>
                    <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E1E9D448-D3D7-481A-AAF6-E9C8AC0BDE5D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='pgc ho seniors'>
      <style />
      <size maxheight='400' maxwidth='700' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96000' id='27' param='horz' type-v2='layout-flow' w='97714' x='1143' y='2000'>
            <zone h='96000' id='25' type-v2='layout-basic' w='97714' x='1143' y='2000'>
              <zone h='78281' id='7' param='horz' type-v2='layout-flow' w='97714' x='1143' y='9999'>
                <zone h='78281' id='5' type-v2='layout-basic' w='97714' x='1143' y='9999'>
                  <zone h='78281' id='24' name='Household type' w='97714' x='1143' y='9999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='7999' id='10' type-v2='text' w='97714' x='1143' y='2000'>
                <formatted-text>
                  <run fontname='Tableau Semibold' fontsize='12'>Senior homeowner cost burden</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='9720' id='11' type-v2='text' w='97714' x='1143' y='88280'>
                <formatted-text>
                  <run bold='true' fontsize='8'>Source:</run>
                  <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='96000' id='32' param='vert' type-v2='layout-flow' w='97714' x='1143' y='2000'>
                <zone forceUpdate='true' h='7999' id='10' type-v2='text' w='97714' x='1143' y='2000'>
                  <formatted-text>
                    <run fontname='Tableau Semibold' fontsize='12'>Senior homeowner cost burden</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='78281' id='24' is-fixed='true' name='Household type' w='97714' x='1143' y='9999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9720' id='11' type-v2='text' w='97714' x='1143' y='88280'>
                  <formatted-text>
                    <run bold='true' fontsize='8'>Source:</run>
                    <run fontsize='8'> HUD, Comprehensive Housing Affordability Strategy, 2012-2018 5-year estimates, Table 7.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{81FA854B-436F-485E-AABB-617FBE2F06DA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Income RO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7CE1A60E-8CBA-4EE0-81F0-079EAAEEF61D}' />
    </window>
    <window class='worksheet' name='Income HO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E7719FE3-2989-4976-AE33-F60FBD089C96}' />
    </window>
    <window class='worksheet' name='Income PGC cb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[:Measure Names]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group) (copy)_1129840597272334336]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2F4E6BD-DE00-45C7-9CDD-3E0F58A60F8E}' />
    </window>
    <window class='worksheet' name='Income PGC cb (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[:Measure Names]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group) (copy)_1129840597272334336]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[county (copy) (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{080F8C1A-861B-46DF-8006-C1758BC0CE99}' />
    </window>
    <window class='worksheet' name='Income TRI cb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[:Measure Names]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{365F3454-9280-49E7-ABF5-424A04A8B143}' />
    </window>
    <window class='worksheet' name='Income VA cb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[:Measure Names]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E47BCF8-8B3F-4461-AABF-40D63E44BE7E}' />
    </window>
    <window class='worksheet' name='Income PGC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA8245D9-C42D-4CF5-B6A3-E62F806FC54F}' />
    </window>
    <window class='worksheet' name='Income Tricities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A99C63FA-80DD-43D2-80E3-FB92BC41B74E}' />
    </window>
    <window class='worksheet' name='Income Tricities (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group) (copy)_1129840597272334336]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Household income (group)]</field>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[none:county:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57585711-F55D-4022-AF28-E91DCCCF814E}' />
    </window>
    <window class='worksheet' name='Income Virginia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2E89E761-B450-47EC-8246-9D0D4DB4DC06}' />
    </window>
    <window class='worksheet' name='Household type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Tenure:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42E36359-F742-4A48-9E93-8DD439B5D490}' />
    </window>
    <window class='dashboard' name='PGC RO INCOME'>
      <viewpoints>
        <viewpoint name='Income RO'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jbul4p00bu0o017wgp790480ki0].[none:Cost burden:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8B13DD3B-7188-4F4D-8510-AE4ECD3BE0A8}' />
    </window>
    <window class='dashboard' maximized='true' name='pgc ho seniors'>
      <viewpoints>
        <viewpoint name='Household type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='24' />
      <simple-id uuid='{93DA0396-9BB0-42E7-AC1D-C14F87C97C79}' />
    </window>
    <window class='dashboard' name='PGC HO INCOME'>
      <viewpoints>
        <viewpoint name='Income HO'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{60108067-90BD-428E-9414-203D629B0330}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='Income PGC cb'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jbul4p00bu0o017wgp790480ki0].[Cost burden (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{64C3DF00-AC87-4765-98F9-4BE6328E4751}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Household type' width='192'>
      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
      WmX3EAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Income HO' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Income PGC' width='192'>
      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
      8P9A4q1A9YWsiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Income PGC cb' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income PGC cb (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income RO' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2Xdkx33fP3X33ruxr7NyFpKiSMqyLTlOzkkecpK3nJOn/Hl5zKOdxHbs
      2LEtS7JoyRRFirNisAx29H57uWtVHjAzHBDoHmDQ6G4A93PODDB3qqvqVte31t+vSiilFAkJ
      1xRt1BlISBgliQASrjWJABKuNYkAEq41iQASrjWJABKuNYkAEq415xZA0HV59OgxbicAoNPp
      vPMzUeuAWve77QfXdXuG7bZdInn6/DQr+xxUKjx79pxOu8XT5y9oNqrsV+q0Wq3DPHdcKnWX
      vZ1twliyvbmJ67qctCFycFA+4alic3PzxPDvot1yiaWi2Wye+P/dtksY9/iwjHDb7y7fN6iI
      l5tbbLxYoVxvsrn5kiiWBJ5HGH+XSOi1efz4MW6rxfPnKzRqVfbKNVqtNgBR0Ga/3KC8u4UX
      KTa3DsvrYHsTL76gbSQV47Z6v2u/OnMSO1ubVA72eLayRsttclCpAWCcK5OA12nS7kZ0mhVe
      brQIuk2mp4psH/hocQMjXSL2mkSxoFTMsrm1x43ZAoHt0zIl+ZkF6pUKFhFP1rcwhI5tKAIt
      xWSpQNSt0+7s4nZdCvkSaBp+q4lpWTSaTaQSFAsFdrY2+eAHnxN3PBYWZ9l/ucaTNcnDxSxf
      Pt8lb4UEvs+DH/6Y8n6ZIJJocRcvjNh6ucf8Ykwml+HxN9+gpzK45TIPP/0R7VaDF08fkZuc
      oXKwz42lefabIXenU7gB5K2zlZehfDY3a8SR5Msvf0NxYhrLdkg7Fppm4WgeaTPL6tPfE2sm
      Gcui3u5QzOeZKGQ5qDV4+viAbK6A5wVkUjatto9tg+t2sNM5tKBJaBZ4OJfDmZghONikXmtg
      aRFxrKjubtJUBrHbxMqVmM7p+BFU9/aYnCzwaGWdjCUIQsWDj39Ac2+fRiCx8Wj5MRubO9xY
      ilien2Rnr8bSwsR5q9FxVEyl2iBo19g5qKBbefCqmMVZpvMZavU6O5sbtAJFIaXjpFKUa21S
      WkTd89GFhp3OcbC3zx//yU8JYolXr6GZGSwnRbmyxUQhff4eQNN1tFexCBQTExMooXHr9i10
      BLZlMTO/xMLiIo4uEJqOZTtMzM6zvbNL3tbptOrsVeoIFIVijmag4bk10o6JbhhYVoobS/NI
      BZoQvE5tbvEwXlMoNN3A1HVA0W23QNdIGzrP1vb48MFtcsVJbC0mCCXNepVarY6eKuLWKiws
      zmEYxqtYD+OfW7xJxjExDB2EwHJSZGwTpZmEXodQCoz3KD07N0llf4+ZyRyabmLbNrdu36Fb
      L5MrlRBI1tc3DnsXYdB265iGwEnnEJqGoevML93AMTSEEIhX5ZHOlVhYWGSqmDtMx7YxLIOo
      26XjB8g44GBvj92DCsVS6bAcXxWl5WQwlU8IrK9vce+DO+SLJWxDI4pC6s0GnXoVaebpNCrM
      LS5gGAYyDNDMM7YAZ6Cyv43b8VEKiimBShVp1ZtomoZhGKRzRWYniwghXtULBULn5o1FlpaX
      iaIYy7IPy0gp8oUCrXqVSvmA7Z1dJCZiVKYQoddmv95lcW5qoPH67Sa+sMmn7YHGexRFuVxh
      ampQeZdsrG+yfOMGb/Q9EAadz6NUy2WKk1NoA83zxVCrVsgVJjD0o5kdmQASEsaBZBUo4VqT
      CCDhWpMIIOFakwgg4Vpzpn0AKeWbzaS38TyPIAgGlqnLQCqVwjTNI89838e2j64+9drwei+U
      ovPoBebCNGYxP7h4B0w+fzRvYRhiGMabJVuAbrdLGIbDztox3gigsr+JNIpEnTIBDqbsEukO
      QavJ9NwcTjqLberA8ReM45goioab8xGilMJxHDKZzJHnzWbzSNkopXBd98gXfx7CZgv/Z1/i
      6xr2n3xK+sO7aPp4deJKKXK53JF37nQ6WJb1Zq8FIIoi4rjXlvfweFN6kzMl2k0PLwJCD09C
      HLg0KjUeP3vG+ubWCLOZoJTCe76BCEJE18f/2y9o/MU/EjRbJCvZ788bSe683KZSi5nICXzN
      wYw8IiPNw48f0Gx3aPlnMMhJGDgqloRP1t78WwDqxRbubgX7Tz8n8+AWQhuv3uAy8EYA88v3
      mF8+OVCmUBpWfhJ64O9XUOU63x9MiY6H/9e/JFzdJPvv/gAzmznx8wknkzQZlwClFP6TNYQ8
      eagjAPnsJc3/8X9oP11LhkRnIBHAJSD2fOKVl33DCEC0unh/9Qvqf/0Lok53OJm75CQCuAT4
      GzvQ9k4VViiFfLxG48//ntj3Lzhnl59EAGOOkpLg0YtjY/9+CIC9Ks1/+A1KJosX/UgEMOYE
      9SZy+ySvtP4IQD5epfW7p8mcoA+JAMYYpRT+8w1E+H6bjEJB8Iuv8Lb2Bpyzq0MigDFGRhHh
      k/VzxSHCiM7//RWh2x5Qrq4WiQDGmGC3DLWzOX+fhGi0cP/2V8j37EmuMokAxhSlFP6jF4gB
      jd/V+g7uv3ydzAe+RyKAMSVqd4nXdwYWnwCif31M5/l6IoK3OCYAr9vGC0J8r4sXhHTabWQc
      EyfLaUPFX9uCzmDX8UUs8f7+1wTV+kDjvcwc8wdYXX2BFBYGEVIo/IaPkXcolOZYmj08/0We
      IIbr1KoopVBKHSuHXs/OHL+U+I9XQan3OnyrL22P1t/8M/p/+ffo9uBPznhdNm+/t5TyWNl8
      P8yoONYDOIaO2/YQmobQbDI5CxUJup1Dx46TMj0OLzJsLvKdg2oDtVu5sPjZreD+7F9R8cX0
      6pepPhzrASZn5pi7mYPIQ2oWtqEBim4QvzmISfue2e3bBzQNC6UUYa2JimKs6dLQ09c07cRy
      ePuZUurMZfPa8E2LJQM+JOgI8tEa7ZlJsj+8P/Cy0zTtSJyv//122YyizpzEMQHki6+OubOP
      uvvlzO+HHB1KKYJKndb/+kdod9E/vE3mxx9j5DJjUajnQQYh0crLM5k+vA9CKYJf/BZvsoCz
      MANjUiGHzbnPBh02hy1/g9Zf/AzROPRPll8/p/n8JeZnD0j/8D6Gc5Gnwl0s/tYe1I/7XV8E
      Iojo/M9/oFPKo08U0KdLGNMljEIOPeUgdO3Ki+LSCSBy27T+8ueI720Qia5P+Mvf0Xj0AvsP
      PyZ9/xaaMfrXk0GIZpmnqkhKKfzHqxfe+r+NCCLYqyL3qshHqwQApgHZFNpEHn2qhD5VwpyZ
      wMpnh5iz4TD6GnIGQreN+xc/g/LJy3gCoN7C/5tfEfzuGc5Pf0hqef5UroJvT9wG2erV//uf
      Y35yj9Qn9zAyqb5xR24bubE7VAF8HwEQRlBzUTWXaGWLCPBKOYr/7T+jm2M0Fh4Al0YAYbuD
      +7//Efaq7wz72hy4+2f/gH97gdQff4JZKqDiCOkHSD9EdjxUx0N2PGT38HfV9RD5LM5Hd7Cm
      Jwdz4kK7S/TFNzR/9xTjozukPr2PmcueKARv5SX4oz8q5ETqLv7LXdJ3evjNXlIuhQAizz9s
      +U9R+d9GKIV6sUV7fQeVshFBCJEEKXu2sgpo/36Fzuwk9icf4NxdRjNPN4TpmxcvIP7Xx7jf
      PEd/cIvUZw+wSoU38co4JnyyNtLWvx9Cgf9oldTtpSs1Lxh7AcR+QPMv/wnewyb+NSKWiNbp
      XQSFVLBTxtsp42W/wnhwC+eju1il/PmFEETIr5/TerSK/sEyqR99iDVVItivog6OO72PE3Jj
      h6jVwcxdHcf7sRZA7Ac0/+qfUCMaFwuAVpfoN49offkE7cYs9if3sJfmzh93FBM/XqP1bAPt
      9sLhs3E3NwkivOcbmJ9/OOqcDIyxFUDsBzT/+hfItZ2Rt4oCQErU2g7dtR06xSy5//qf4P7t
      88cbS9Tzw/vGRv2e70IA4eNV5A/vo+n6qLMzEMbSGlSGEe7/+wL5YmvsKoUAKNeR1cbg470E
      qHKdYO8CzTSGzNgJQClF63dPiJ+sX5pKcZ0QUuE9WR11NgbG2AkgbLYIf/MoqfxjTPx8k8i7
      GkeujJUAlFR0fvU1dK9G4V5ZOh7+6tU4LPnYJHh95SmB5mApj1i3CZotJhfmyOWLOObFTny8
      7T3ip8nQZ9wRgP94lfTD25d+T+CYALpelwCFkbEQKsDvdnjxYpV8cZIHd28ipTx2F4CU8kQn
      mbOgopjOz3+LCqPBO4EMGKUUcY9y+P4zJRWKMV/efB+29vGrdaxS4dh/ff/c/ziOjz0bRJ0Z
      BMcE4DgpDM3BICTWs3zwcAbP92h68RsbeON7RmYn2cafFffpCuxWzh3PMJBSovcoh7efKaUQ
      mriSx5arWBI83cD56adHnyuFrutHegZd19F1/UjZDKLODIJjArh19/6xQBkKTF5gJqJ2h+CL
      b5KhzyVCAOHTNeQffjwWVrfvy8glqJSi/etvwe2MOisJZ6XRwtu83KfOjVwA/kGV6PcrSet/
      CTk0kHtxqXyAv89IBSBjSecXX7332ZcJo0eubV/quwhGKoDui5eojd1RZiHhvLwykLusjEwA
      sR/g/fKrgR39lzAaBBA+Wr209xCMRABKKdq/fTyQg18TRo86qOHvn81ZaVwYiQDChkv45eNk
      4ntFEFLhP1m9lJPhoQtAKUX7l1+Nr+9rwnsRPd1ABpfvOx2IAFQQEvk+KpZ9z3xUStF9uYt8
      fvEHPyUMF9Hx8Na3R52NMzOQLbzuz39L47ePIG0j8hn0fBatkEXLZ9HzGfRsGs2yEID3i9/2
      vO824XITfPuC9Ac3Rp2NMzGYPexYIvwA/ABqLjHw2vRJARg6yrYQtgnVZtL6X1Hk1j5Bw4XF
      Uefk9Fz4HEBw6ACutbuIpPJfaUQUE7zjQu9xY+SmEAlXi/BfvoVLtBp0bAi0sfqc7XKTQkon
      1nX8eof8TIlccYa5yeO23wkJb6O6p7vRflw4JoCJYp5UaZ5mZQeFwsiEuM0uQqsjS7kTnT7i
      MXFuGBaJQ0wflCKOYtC+e+dL5RCj21mmUinMOEesp8kuGEBMsxP1dIjRx8S5YVgkDjG9UUqh
      G/qRd75UDjGpdBqA4uTskefTqeFkKCFhmIxeggkJIyQRQMK1JhHARRMnzj7jTCKAC0aXia/z
      OJMI4IIxjPhSmglfFxIBXDCmNfq17oTeJAK4YMyUDmOw4ZNwMokALhhnIk3cvbynJlx1EgFc
      MFY+DcHlso+5TiQCuGCErqHryRBoXEkEMARMJ/GCGFcSAQwB0yZZCh1TjhnDHexs4mOjhS0i
      3SFoNZmem8NJZ7Ev+IKMq4qV1um0R52LhJM4JoDN7S2szARpx4DYpVGpUXFdSpMzfHBzKfEH
      4Iz+AEph5W3iiodm28PM5mi47P4ApWIJXxqo0Cc20jz8+AHNdoeWLxN/gFecyR9ACOxSBh5V
      0VLDsyl/PeQa9hVGw/IHeP1+UbuLv7lLtL6DsC2MuUmMuSnMbBrxvYs6TuJ0F2QUSu+d0QQw
      HAuhhndolIolorJKnJ1Hf+XfcVWQcUxQaxKubRGu76B2K4jou94l/go8ISCbQpudwJibwpif
      wpwootvWMUFc3qs9LhlmSgzNMVI2D7j9H+6x/9UO3dhGXOJb3ZVSxEFAsFchXNsmWtuGeguU
      Ojxx5ITPCKXA7aDcDsHzTQIA24RSHmNhmvTnDzGzGSARwNCwHI3uqyHRRaKimOKcgWYazHy2
      wMbPN1G5uUt7m2P3xUu6f/cFdPyeFb4fb8L7IexWiHYrNFc2yfzHn2LPTyfLoMPCdIZT1KpV
      ofRgBgDN0Fn4bBrZqAwl7UGjlMJ/toF4VfkHgQBEo0X7z/6e9rcriQCGhZUzUeHFzgNUFFGc
      N9DeGvJYhTQzdx3idutC074IZBQhdy9GvCII8f/ui0QAw8IupJDexRrFqVaF4r2ZY8+zyyVy
      2S4qulzeaWGtCe7FbaAIqRIBDAszm4LIv7D4ZRRRWrTQ9ONfqRCCqU/m0b3ypdqRDl/uXfhB
      yokAhoTQBKZ1MXErpRDtKoW70z3DaLrG/I9mUI3yxWRiwCiliIZwBWsigCFipi6muFUYUlw0
      T2z9j6SfcZh5kCFujf/VVLHnI/cufvKeCGCImI4Y+BBEKYXm1Snc6d36v012oUi+6CODYKD5
      GDTBfhW6PnFlB9nYv7BL+BIBDBErpcP3bGLOiwpDSsv2O1v/t5n6eA4rro7tzY5KKcLNPVCK
      7JTJjZ/MYMcHxJ3Bn7CRCGCI2MUU0hucd9hh618jf3PyTJ8TmsbcZ7PgVsZzUqwU8dY+KopI
      FS0Mx2L+D5eYXo6R9YOBCjcRwBCx8inUAN0jVRBQWnYQZ2j9X2OkbWY/zCLdBiqOUVF8uO4e
      RsgwRAav/wRv/gyL0G2jynVkt40zcWiyIIQgf2OSG388hRXsD6whSUwhhohmGujGYFovpRR6
      2CB/6/3vI0rPFpiNaoRtF8ThShUc/hTilSXpK/uDsBVQqzro6cxA8t+PcK8CYYSufMzc0bmN
      kbZZ+MkyzdUylfUWojB5KjMPpdSh0H0PzUm9sY86JoBnj7/Bzk8TuGUizSRotinNzVAoTZFP
      XwN79gvGcjQGsR+sfJ/SjdSbSvu+ZBdPZ+mrlKL7xSaBSl+oXZFSivDlLiiFk9VOTEsIQeHO
      NOkZj72v9wgoojnOkTiQEhn44HcwLYWdFjiTJnbBofK8jB+X0CzruAAmp+eo1OoooSMUZLM2
      tWqNZtvj4/t3L+zFrwtmCoLofEZxSilszSW3vDDAnPVHCMHsp3O8/OIAclMXlo4MQuL1HVQU
      kZ7qv3FiZh0Wf7KMV+1QfryHjMHO6qSnM1g5G5SJmZlBt45W84VSBnezQXm1dcIFGRrMzC1g
      qhCp29iGhhCKjjfY1YvripU2aNckGO9voizbLSY/yp+79T8rhmMyedPmYKuDnroYP4OgWodW
      F9XtkJp893BLCEFqMsPyvzn90ExoGvkbJazsCQIolE5Wd948dfwJfXBKKeSuh26831haKUXK
      7uJMnm3lZ1DkbkzQ3N4kVKkLGQqFL/cQSqHhY+YvrqcBcCayySrQsDFz51sJkq0mE3eLA8zR
      2RBCMPPxJLJZG3jcSkqil7uoPuP/QZMIYMjolvHeB2UppUilApzJ7IBzdTasfJr8RDxw69Ko
      66HKdZASJzccL7ZEACPAfM/FNBUG5OfH47K2yY/moD1YW51wvwpegPS6pCaH48ucCGAEvK9N
      kOq4pGbyF5Cjs6MZOtMfZAZmnqCUIlzfOdx2CDtYxUQAVxYrffYj05VSOKn42JLeKMkslrC1
      5kDiUlISbR8AYGfEEa+2iyQRwAiwctaZ3SNVGJKZdt4dcIgIIZj5wTRx/fxDocjtQN1FSYmT
      G57IEwGMALuQPvNKkOq2yC4WLihH74+ZdSjMHHqknYdgaw/CCOn7OMXhWRwkAhgBespCxGcz
      LrNTMYZzQS5l50AIwcTDWbT2+1uWvjZ/FgD+dwZwwyARwAgQQpzpyHQVRWQnx6/yv0bTNabu
      Z5HvOSGWUYTcOXTVtGyFbg9v1zURwIgwznBkuuy4ZOZzF5yj85FdKOEY7+dqGVYb4LYPbZyy
      w62SiQBGhJXW4ZQCMPUA4xJY4s58MoNsVM/8uXBrHyEVKghwCsO1uUkEMCKsjIE6hXukimMy
      E8alONrQzDjMfHi2nkopRfRy9/B3r01qarg93bH1Jr/dYGPfxaZLpNmErsvk/DzZfAEnuSBj
      YNjFNGqtA2b/Fk922+Tujd/qTy+yc2cz04i7HnKvigAMPcZID3euc0wAz1dWiYSFkUshlE+3
      02blxQvypUke3LmZXJDB2S/IOMmHVU9bqKCKlP0rjCE8jNzE5SlfpQ4vw5CnuyDDP6iiOt6h
      nVPmcId8mH7KxwSwtLxMtdFGVwGxnuHew2m6nofrJRdkvOasF2SIk8pG0zCsw5+9UFKSnTAv
      VdkqKdH101+QEW8doAmBjGJSE8bQ3/UEf4BJCqWjtuaZPFysZfb1xEpp9NsNkJ02mVtX64KL
      t5FxTLSxA4DyOqSmhrf+/5rL07RcQd5lFKfHncPrla4oUauDqh3aEmnKx8oP39I1EcAIsTJG
      z4OylJSki9rJw6crQrhfheBwzmSnewwVL5irW7qXALvgIP2TT4yWnkd2Ybw3v85LuLaF4HCp
      d9gbYK9JBDBCzJwD4clGcVrcITViz6+LREYR8SvzB+l1SU+NZq6TCGCE6JaJJo4PgZRSpPPi
      vU58uyzErQ40Dy+/ELGPXRzNXOfqlvAl4SSjOOl5ZGfGy/Z/0IRP1yE+3CuwbIU2ok3WRAAj
      xkodXwkSnktq+mqP/2W5cTj+Vwp7hCu9iQBGjJUxjuyaKqVI5QSaOT6ujxeJ9DxSk6Nz9E8E
      MGKsrHXk5GUVBGTnxuPkh6EQdEc62U8EMGLMnHPUPdJvkZ4dj5MfhoFpxujO6I4dTAQwYoy0
      jcZ3BnROWo7VyQ8XiVIKa8SdXSKAESOEwLQOJ8EyCEhPXJ9DWFUYki6N1tEnEcAYYDqHX4Pq
      uGTnL4/t/3lR3Q6p6dFu9h3ra3c219mptknrIZFmEDTa5GcmyZdmmCld7aW5UWGmNLrtGMuO
      0VPj6/w+aHQ9xMiMtgc4JgDTNDB0HdOxMFDoqYBGo40SFaYKmcQhhsE4xLyNmTGIKx6FGXPo
      DiED5wwOMZajRv6+xwQQRzHT09M4WkCsp8kuLIKKaXaixCHmFQNxiHkLp5hG/m6b3OfLl74c
      T+sQI5QkVRi9s88xAcwu3jgxoHN1/TJGjpG2cSx/6P6wo0T5HukRj/8huSVyLNAMnbmf3rkU
      Jz8MCt1QmJnR2ztd7v72CmHlrtHuLzBxpzC0E6D7kQggYSRo5nhUvfHIRULCiEgEkHCtSQSQ
      cK1JBJBwrUkEkHCtSQSQcK1JBJBwrUkEkHCtSQSQcK050R+gGxuktJBIdwhaTabn5rBTGezk
      goyEK8YxARSLJfyqixcriJrUy1UqTZfS5Ax3by4m/gAM3h/gSnHGCzJGzTEBrKw8J1OaQ4Ue
      sZ7mwUf3abQ7dILkgozXDNof4CpxWn+AUNNQY1AuxwTwg09/9Oq3hTfPssWJYeUnIWGojF6C
      CQkjJBFAwrUmEUDCtSYRQMK1JhFAwrUmEUDCtWYgp0IoXm32KAVKoRS8+uvVvw9/IgS6M/qT
      ABISXjMQAWQLEpmpIzQNoQmEJkCApmsIDRACoQtUHFN+vo/KTl2rzaGE8WUgAnCKFsbDudOF
      nciy/etd4tQ0YgyOxUi43gy9GTZSFks/WcSKDo7cjHJWlFLEnTZxp3O5z9JMGCkjGYdops7C
      Hy2TsRpIr3vmz8swRGsfMHsb5u6AFR4Qu43rZXSWMBBGdjSi0AQzny1Qe7pPbT9Cz7776HUl
      JcqtUZgVlP5g/s3JYum5AqHrUV+t0qoB6QKaeX0umkh4f0Z6NqgQgokHs5ipKvurNbRc8cTz
      MZVSyHaLlN1h+sfTmFnnWDxWPsXMpymmwpjGaoXmXkBs5BC2c63O3Ew4G8cEUN5eoatP49c3
      iXWToNmiNDdLcWKKrHMxpxfnbkygO012vy1DfupIhZVhiO5VmbmXIz239M7KrJk6pfszFO8p
      2tt1GpsHeL6Nls0nQkg4xjEBTE1NslaW6JaDjiRCsr29S7Pt8fDurROdPgbh3OBMZVn8TGf7
      y11kbuYwXrdKaV6n+Pk8QtfOfJlCer5Aer5AUO9w8O0OgT6BsM4v4sQhpg+X3SFme6dMx9eZ
      yBjERprZ6VniOKTRiXs6xEQDcoixixlu/NRi+9c76JZg+o9mMAdwhY4zkWXp32SoP9unutVG
      K0ycqzdIHGJ6c+kdYhZufvCWK8x35IZ0d5vumCz/6cmXdJwHIQSl+7Nk5rrsfrVHZE2gDaA3
      SLjcDESCwlHIuIrsVpF+CyXjkd/91Asrn2L5T5cpZF3iRm0s85gwPAayCqQt5bAnPkDFMard
      RbptVNsDT6G6EcpT4CvQbTQ7M4gkz4UQgsmP58lUW+x9vYdMTyGM5LKc68hAv3Wh64h8Fi3/
      3d1Pb1rYOEa1O8TbNWQ5QoQO4hzXhKvIR8k2KB1h5t5rnO1MZFn+0zSV3+/QrFvowxrnJYwN
      F97svZlsGgaikEcr5A/X9WsN5MsashojRBZh9B+PKyVRQQdhR4i8hj6XQ5uchSgiWt9DlUNU
      10Czz3bxmqZrTH2yQLbssvvNDuRmEhula8RI+n0hBPpEEX2iiJISuVsh3qqhXIEwcgjtsAIq
      GaECF5HVEBMmxmwJkc8eXcHRLcz7y6h7CllrIrcbyH0foecR+ul2g4UQpKbz3Py3GXb+ZQtf
      TiY7ydeEkQ98haahL0yjzU9BGBFvl5G7TTA1tJk0+vQS2NY7ly0PRVVAK+XhoUTuvRaVhrBy
      CPHuIZJm6Cz80RI7v9nECxMRXAdGLoDXCCHAMjFuzaNuqu+evU88ho6+OIO2MA2eT7RxgKqF
      qLZCaCkw7J5xC11j/g+W2P1yi25QRLPOvw+RML6MjQDeZlAmC0IISDmYD5YPJ+NRjGy2kJUW
      qhGiWhKhbDCcI5NooWvM/WiJg99t0+rm0BIvtivLWArgIhBCgGmgTxbRJ4sAh8u2rQ6y4iIb
      AcqNEbGDMFMITTD96QLi6x3clkJLXa97fK8L10YAJyF0HVHIoRUOTbGVlMhKg3ithnINhJlh
      6pN5tMd71KsSPT36PYyEwdJTABurz4g0m9B1mZyfJ5sv4Fzx49GFpqFPl9Cmiqi6S/Sigmpo
      TDycRTzdp1ZW6OmzLbMmjDc9l0ZiYSCUT7fTZuXFC1bXN4aZr5EihEAr5TF/dAvzx1OIvEvx
      TorJ2Yi41Rx19hIGSM8ewFAxkZ7h3sNpup6H643edHXYCCEQ+Qzapxlkq0Nx6gDx630ONt7f
      lzlhvOgpgOXbH7z5PZOHKb6z4W42j7aCsW8ig3e7NF5qrBw8mMW+5ZP755d4hjhWDp7nHfuY
      l59CyejY86uK0HRUywW+W8kLgoAgCI6YzIdWiiidH0EOjyLUBZlDxnGMfgqTgnA8BCkAAAbt
      SURBVDg+9DN419Lna+eJd/kdvLZCPY1/wlnyeJpwp2XQ6Y57uNMy6HSllIe9eJ+6dW4BtBtl
      tiptpnMOqYlZnB75CrsNXmyVCbsBD3/wIUaPPEV+m9WNHZqNBj/49LOe95JFfoeWF7K7tcnS
      nftknZN3bZWS7G9tUHE95pduUcr1WtOPefLtE5Zu3yWT6rf5pdhYW8EPJNnSNPPTpZ7hNtdX
      sbITEPnMzM72jHF3a4O2F2DYGW4uzfcMV97bplavE4oUH92/3TNcpVJBUyEVN+TurWV6ff/N
      WoW628IPJXfv3EbrEa6+v0U9MlienUbXezcssdfi6foWKlLc+/ABZo8Im7V9DhoBpbRJbmoW
      s0eUXqvGxm6VyI948NED9B75C7suq5t7uI0mn3z+OVaPgEHHpRsptl5ucvvefVKWcX5/gG67
      RaGQ5/mzFaI+UvKaNXTNwLZN+k0nNN3EMnWEYfW9lE/GIWvPnyF0g0aj0yeHiu2157TDmE7n
      +BDlrRgxrBTtRpm62y8+aLkuTdfFbfSfEHeDGII2O/vlvuHaXohtO0Re/3QdxwGlSKX6L8e2
      GjVW1ncg9vuGi0KPtY1NOq02/WZ4fqdLoZBna2uLqE9Av9Ok2WjSarXx+gTstFoU8mmer6wS
      96kznWYd41V9CPrVGcPCMnR0y+pZ+QFk5PPi6RM008BtH5bNuXsAGUcEYUSzWiY/u9SzB5Ay
      JghC2tUDnJllMj1mH0pK/CCgVStjFqYppE9ujZWS+H5A5HfwpMlU6eQ5iFIK3/dQKqLZDJid
      nezxJurVGF5Sr3eYm5vuGS7wA2IZU6+7zM/3atkVQRAgpaJWqzE/37tlD4OAWEoqlSqLiyf5
      4x0ShSFhGLBfrnLzxnLPcHEUEkYxlXKFhcXFnj1AHEcEQUijWmVyfrFnS3wYLqJVK5OdXSLV
      4ztWMsYPQtq1MtbkAjnr5AjjOCIMIxqVChN90pVxTBCGuJUDsnPL70y3Wd4jNbNEzjo54Os6
      E3RcYjNLKZc6fw/QrOyyvrXH3s5O3x4gcMs8W9tmf2cbv4+aY6/B05UN6tUKHT/uGU6GHk+f
      rVApH9B6R8v+7MkTqtUq9Uar77usPH1KpVKhVu/fsq88f0q1WqVSq/cNt7rynEqlwkGl1jfc
      +uoK5UqFg3K1b7jN9ReUa3Uqlf7htjfW2a9U2N3bp1/rVt3dZGuvzN7ubv+WuLbH2uYuezs7
      hH2+u7Bd5emLLQ52d/D79AC1vS02d/fZfVe69T1evNxlf7d/utGrdGvlA7w+lTD2Wzx9vkZ5
      f4+2d7iSd24BpHMFNBmSnpgl02deYqbz2FqMUZih2MfIUrcypC2BsnNM5Xvb4GiGRS5tEyqd
      2el+l/hp5HNZut2AxeXerStAoZDD6/osLC32DVcs5PE8j/mF/uFKxQKe5zE33z/dUqmI73nM
      9uklDsOV8D2Pmbl3hJsoEXgeU7Nz9FtayBZKqMgnPzWL3acmONkCBhFOaYZcH9sBI5XDMSR6
      bopSr+YayOaLqCh4Z7p2poBJhF2aJdsnXT2VI2VItOwkE72GIIBupsg4OrGRYvrViOHcAnBr
      FWLNoFWrEPZRc7dRxlcG3Ua17xzA7zRoB4qo69Lyei8fxkGXeqsLsU+j35hdxVRqDUxdUqn2
      a9kVlUoN0xCUK/1b9nKlimnq72yJy+UylmVRqVT6hquUy5iWRaXcP1z5lOEqlTKmaVF9R7qN
      ahl0k0a1Qu++Flr1CqEwaNerBH3neRW6Usd3a3T7tMSN2nfp9lsgbtfLhBi065W+6frNKp03
      6fauXGHXxfUipN/G7RzOAc7fA+QL6ELj1s1l+s0mnGwRQyju3L5Bv37ZdLLYpsbyjRsYfXKn
      mQ7ZlMXc4g2cfgGFTiGXZmLuBpl+zQ2CQiFLfmqeQqa/d1qxkCeTn2Ki0H8yWiwVsdM5pif6
      u1oWSkVMO83cTP/raAulIrphszjfa37yKlyxCJrBjcX+J3ZnC0U0oXPzxmLf7y6dK6ADt28t
      9Q1nZwpYQnHr1s2+PU8mf5jurRuLfetCKldEF3D71nLfcFYmf6p0DTtNyjJYXL75ZrJ8bgG0
      6lWyuTSPvn30jh6gQrZQ4NHX39Dt0wMEnQZ2OsfKk0e4XtgzXBx0EWaardVnVJvt3hGqiAiT
      yvYq++VGnzeR+JGgebDFzl6/llPR8SO85gFbO/t9woHb9pBek43N7b7hGs02uvR4sf6yb7ha
      rYmjS56trPcNV6nUyaUMHj990XcO0KjVyGUdHj962ncs3qpXyeVzPPrmUd/5m9eski4UefL7
      b+j0GbQ3X6X76NHTvvPGdqNK9jTpurVX6f6edp9KGHotTCfD2vPH1F+tAv1/pIGxAy2d8RUA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Income TRI cb' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Income Tricities' width='192'>
      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
      cD1WlpZ4ufZyol06lSbj2HRPKF8qnWFxcZFmuznRzjF0egOPnZ3Jfsnl8pQKRfqDCd+rGUT+
      ACEEYXx8l1wz7OHaBV4X1zvef3HgEUqNohWx3TxeeOcaDq0ZJvlUBtOyJ9rppkU+bZ1sZ1jk
      0/aJdoZpk8qcxs4ilXVOtDMtm7Q9hZ19GrsU1kl2tkPmNHaWTcZJn2hn2Q7WGdrZTmo6O+f4
      G5zQTNKOTaawjKsfXy2FbpJK2aQLy/jG8c8ZQjdIOQ6p3DKRdfz5zrUF2N3aIgwDdvcqE+12
      3tpVqpPttjcJQ5+9Sm2i3fb2JmHgsVc9wW5ri9D3qFQnz2MM7VwqtcZEu62tzaFd9QS7zU1C
      f0Cltn+yndenUpt8J97a2iL0+lTrJ9htbhJ6Par1yS3e5lu7RvtUdrUT7DY2NwncLrX94+dJ
      Yr/NVqVFbW+bQB7/TBq6bXaqHWq7W4ST7AYtdusdqiec71wFUCpk2NqtUpopT7bLp9nerTJz
      gl0xl2Z7r0apPDkdsZhNsV2pn3i+QtZhp9Jg5oTz5TMOO9V9ZmYm2xUyDrvVfconns9mt9o8
      8Xz5tMVuvUW5PCkJH3Ipk716+8TryKZM9uqdE8uXdQwqjQ6zJ3xvxtapNLonniMdTN8AAAAx
      SURBVC9jadT2exPPp1l54sE+0sqQNo+vsIaTJ+zXwc6RmmSXKuB36wg7R2pCP+f/A29w/14A
      OkNkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Income Tricities (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC4CAYAAAC1reOrAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2de1zP1x/Hn6skRe73uUvTrElflPSlIiMTQj8yobnNzHXYry0/tsYY1rC5
      xTIxMyaXyKXyjXT5VjRaqjVl5FJs0f1bn98f3/oqXakmvp/n49Ef3+85533O53zP+3PO+XTe
      n9drgiAIiIioKRovugEiIi8S0QFE1BrRAUTUGtEBRNQa0QFE1BrRAUTUGtEBRNQa0QFEKkQu
      l7/oJtQqogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOI
      qDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaID
      iKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWi
      A4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1ogOIqDWiA4ioNaIDiKg1
      ogOIqDWiA4ioNaIDiKg1Wi+6ASIixclPj+P0jz/id+0eWTSglakj86ea00ITIIMEn+/Z7BdP
      lmYLjB3mMntwOzSVJclOuUrAmUCCIxvi8I0LvZ9YJT3uND/+6Me1e1nQoBWmjvOZat4CBBGR
      CggPD/8Xa7sn+HlsFI5cvi1kKQRByH0gxPy8UlgX8LcgCIKQFbVT+GxLkHA3VxAU/1wXDrm7
      CUeSCoum+Akea38Swm5nCfKdO4WoEmb9BI+NR4TLt7MEpdkY4eeV64SAvwVBnAFE6hDNsJm7
      AE3Nwo+aTelp0YegK1lAfaIupDJokgut6gH1emA/2gB3+Z/Yd+wCbWz56GNlsculzNowd4Em
      T8z2xKJPEFeyxD2ASJ1C88ngB8hP5dKxRDqbtAH+5m8M6NqsWG7DnrRJfUB+pWafDH6l2Usc
      S+yMSRvRAUTqKHn3LuC51gcc5mLbBiCXHI0GNCieSVMTzTv3uF91q9y74InSrC1tEDfBInWO
      fNIj9rEzxogpS10KN78A2tQvyCKrRNZ88tu0omWVzKYTsW8nMUZTWOrSQjUjiDOASJ0iP/YX
      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
      Iz1iy5Ol0URXvK+WE1+bfwMf18nY2UiR2tgx4+vz3CnUskn2dkG69Du8i9Jtpz1ZYpVYWqQR
      uHoq9rbSwqXYIvbE1sQ/b9KJ2DJDWbfUlomuPtwobFvJO7dyKTjDzgap1Aa7yYuY995XxZY9
      dwjb5cpkOxukUlvmHrhBfuFy6xM/iN82Gam0aEbJ54aPKxNV1zKHvfGlOq1YfVJsJ64mMK1k
      n1x0lzJ5Wzz4faK07eLNn7HbmSRdgI8qxiENnwU2/Pd0Ob9NHSInJ4e0tDRVnO/TmJubc+bM
      GdLS0igoKCAoKAgtLS2aNm1aIl9qairbt29HV1eXTp06VWMGyMkmk5a0KCsc8p4PbksjeWvj
      ATYb65N+fg3T5q+jzbHPsdEtnjGfqM0L2CG4sP3ku7QngT3zZrHIayv7phe+PiOrASaLt/Mf
      dy2ubZrMh75RzDKxKFVlGzs39i7uSiPtfB4e+wT7jccYss2RdpVcht8nUvye+s7Auugy3Pg2
      dwZ7T/ejKQ85v2Ya//UyetK2IuK9WLQqnsEbf2GrcVNI2M306SWjZJqYfcR2Z3e0rm1i8sID
      hDsuw8lTRmd3Kbs678XTqaMyY/Y5PNfnMckngHebQubdKyTmlKwuP2ozs1fFM/a7Y2w1rE/O
      3b9IbwAUi1+2cJWxt7MLk29MR+Za1F/3cDDey5nAe9g7tIK0CwT8Zs349S8wYq2K5Ofnk5eX
      h4eHBxEREeTl5WFgYICrqyudO3eme/fuODo6Mn36dB4+fMjAgQNZtmyZKlbg6tWrLFmyBIVC
      wdSpU5kwYQJaWlrVmAHq66DLfVLLiMDKvBxKZH9Hpho3RRNNmg56j/GdzxMS9XTOeMIvajNq
      yru01wa0uzNlijV/XQxDtSpu0wOj1rpook2TZo3KaUw9FL95MmeMDVKpFfbrQopFRFXMsNUy
      ZLKiv73MUo3tTC6HRvLnr0uwt5IitbLnM78H/JVS+sVNyWEX+Us6CRfjpmgCmtraT91Z2tDD
      qDW6mqDdpBmN8hTlq5vrdKTL6xFsXfoZm71Pcz37DXp2fKrXwi+i7biQKYa6aKKJbutOtNEt
      21xJWjF84jBuHDpOPJB2IYAEu3cwq1xntE6goaGBk5MTvr6+qnX+tm3byMrKIjo6mlOnTuHl
      5UVgYCB2dnZ4eHiojnH06tWLU6dOcfToUdq0acPq1at59OhRNRygoxHG+r8RGlEHps+o3Szf
      r43zDyeVA3n1sBozbTz/l2IOIit2N30KLa0q6NVWBQOm//AT61wkNPjjDGtnjGbZifLflvas
      6FpMYCxnCYq/R+CZe4x917SG2l276Orq0rJlS+rXr0+9evXQ0NCgb9++aGtr8/jxY86cOYOd
      nR1NmjRBQ0MDCwsL6tevT2JiYik7Q4YMoVOnTkRGRlbnKZAJ0z7qT+h3q/COfkg+kHs/ktMh
      t9Ht3Z8+oQf4Ifoh+eTz8PyPHLwxCLNSyzcD+lrkcnTPMW7lArkJ7Nnjz+sW/ehYusLyyckm
      S7cZrRtrk5+ZRHBYYuVlKkWX3qbGRP+4Cd9buQDkPkokOKL0E5v2b7yJ/qUTHFNeBPeTbvOo
      qrU01OduQgIP85XTPGlRnJY/okOfsbi4reGTd5sQdbXk9Rj0tSD3wEb2XM8kn3wy7yZxp4wt
      j17DRpAYR0IuSlV1ZWlGOjTjsOcGAnBgpEHpcnWVvn37snfvXtU6Pzw8nHr16tG0aVM6dOiA
      n58fjx49oqCggJiYGJKSkmjcuDGBgYFERESQk6NcS968eZOoqCgaN25cvdfD6Nt+jnf9jaz8
      zJFtD7PRafomDv9bD63sWbX2L5Z95ojVw2x02lvi7LHsqfU/gCYmH37DDLdPmTl8HY9ohOFw
      NzY4P+Ov0teRmW3nsnDIEXQMrZhuUtHLiqpOq9Gf8vmfK9kwbQhrskGn6ZtI533CgKevwvR9
      Vg5fjNuUIazTbI+lTReeepdKuZiMmcPby9Zgb/U/dEat5/QHWtz+xY3/fJbMo7x6NOpoxkdf
      9C1Zn8mHbHXbyGeL3mXnozx02g/nv5s/oc1TtpsPdcbp+KfMGrIb3prPj1scaAe0Gj4Gk+9W
      8vCDRbxML6rr06cPqampTJs2jfT0dIyMjHBzc0NLS4vRo0eza9cuxo0bR05ODq+//jrz58+n
      Q4cOPH78mG3btvHbb7+Rl5dHixYtmDlzJsbGxpVHhL3KR2FrjMw7JD3Uo237RmjnZ5J02JXp
      5weyf7NDnRxguQl7mPdBPBOOPP1QojQxMTGqx46vIi/jC8LqHlmx7Fu2jrPJj8ijHo0Mh+P2
      +eg6OPiT8XaZzLab3XBc7VHp4FcHxBlApEJe9RlAPAwnotaIDiCi1lS6B9DVFReK6s6rPAbE
      GUBErREdQEStER1ARK0RHUBErREdQEStqYYDKAXbVLqslrZMX+1PygtUX0vycipX/7eitCqT
      Ho3XknFYmUuQmFsxbolPnZMkfdl4Fp3gIjIyMpgxYwbTpk0rU3ly586dWFlZER0drfquVnSC
      Aew2KHVZgw99Sf+EFYx18VYNiiQvpxrWrVU6XXX1gpUqks8o5K1IxGveLPZpOLPnvBx50AnW
      DdKh9iKg66jYeA3zLDrBRfj5+dGhQ4dSQhgAN27cIDY2lr59nxwgrEgnuMaWQNqtJMza+AkD
      4jzZH6acBjo5eyP3dqbmNNmUipHeztW02MkZb7k3z2Im7cRGtj6azMYv36WDNqClS5d3h/F2
      9Vqi9hTpBPfs2bNK+ZOTk5HL5UycOFEle1pEbm4u3t7eODk50ajRk+Cpa9euqXSCtbS0GDVq
      FK+99lo1dYLLQt8WO+t0oq4qz8yXWHYkeeEkmY+H1xLGWZkjkVgycVMEGUDaoTlI5hxCGVyW
      xqE5EiSOuyg6BR+xzrrwrq+cAVQrGUUK/qvfUy1J5h8sJqZVUVqRjnBR1iroA1+LvEQDczOM
      yvzXYTphG6dja6nUNx69xItolWSxU4kZq8Rn2Qokju7sWl1Y1nwkC3ySCtu3iBNcZ5ODcom5
      QqYgZsvYYv0EpB1ijvlifOtATNK/QUFBAb/88gv29vY0bty4VHpISAiNGzfm7bdL3pZqRye4
      TLTQ0oI/kv4qJz0TXdPF7DlzieAdY3jsdZQIoPngIfQNj+SKAlBcI/quHXbNwolKA4ghRNYW
      28Glb9dxnnNxjbXiu3MhyC/5sXpEyyqllaBK+sBZZGVC21YtyjRx99Ay5svf5iufEOQhPnyk
      t49ZX/hRenVaVpdk0W78NxwPCuH00m5c+DmQpE7OeMs3YIch8w4pl5grpVoYjXOkd/hJzt5V
      Fk0LPMtlW3ts635Ib40QHh5OgwYNSixvinj48CEBAQE4OTmVmhkq0gmuYQdQagF36/R6Oent
      MOzVFl0t0G7WHNXv1lyCmeElIq4AV0KJNh/FdLN0gkMzICmcYAbQt9T4T+KSLBlbl+n01NUC
      tNHV06pC2lMU6gOvHzMAiUTCgEnfcS3rVgm9YWhAA11IuZdahoEMIoLDGeD0PibNtECrGdbT
      J9HVP5iIMnKXQt+Ant310UaLZs0rERhsPZIpdokcOBIHpBF49jr2dgPU4kx7RkYGfn5+jB8/
      vtQABzhy5AhWVlal3gIBtaUTXGYrz3HKXx8T+2cKaAQ60XeAHstCYnBocBnj/gvp1GIAd07E
      kpYVQor0fWr1QG4V9IHfNO5LuncIMQrTcpZB/wZ6SJ0c+WZ5AHGjm3DyriNLa0TUuO4TGhrK
      8ePHOXr0aInvL126xKpVq/j111+5fbvkmzh8fHyYOXMmvXv3rg2d4JLk3pPjtXwDQb3nMu05
      fhQjMykZwSc4FN6G/qZaYGTCG5fOsjP4OraDytpqtqfnW/oE+Z3kXi4oMlP486/0KqQ9RRX1
      gZvbz2Mae1mx+gw3c5X5/jzmxxX0MB3Ql2DvnUQ9UIDiAf679pFoPQDTwrIpN2+Ri4LMP4M4
      XnXRXxrqpxAX9wBF4cyqbO9oHJsd4Ps1Z8BxNC+Z7t1zY21tTVhYGHK5ckno6+vLkCFD8PX1
      ZdCgQRw9elSVJpfLsbe3Z9euXcycObP2dIIBTixSbtIGOHxBaNdlHN7k8HxK5G/3xzLxAAfS
      jXlTD+BtTLsc5GCwJQPKFLfVot8Ha3g3eS32AyRYTVpP0IOqpD1tpor6wFpGzP1hGyP/2caU
      Qcp8H5/PpgnQ2uErPCRXWGZvhsTMnm8zJrHt02HoAe0tR9Dj3GIGmA9lypZE2lVd9JcJ8/tw
      bZUtZhIr1qnWU60ZOV5CSBAMHfwyar6XpKo6wdVB1Al+pcglbtcMXGIncWrtsCqG3j8/ok6w
      SN0hyQsnyQBczvRm/ae1P/hfNKJOsMgLR9QJFhF5hREdQEStEXWCRSrlVR4D4gwgotaIDiCi
      1ogOIKLWiA4gotZUwwH+JZnRGuepdl90R+riTV1u8atMQUEBCQkJfPnllzg7O3P//v1y8+bm
      5rJjxw5sbGwYNmwYBw4coKCgQJUeEhLCmDFjGDx4MJ999hmPHj1RaUhISOC9995j8ODBzJ49
      mzt37gDiDPDMJHu7FHOYf1vz+NUjNjaWnTt34uDgUOY5/+LIZDJu3bqFj48PP/zwA8HBwaq4
      35SUFPbv38+aNWs4deoUbdu2xdvbG1A+xdq+fTuzZ8/m7NmzDB06lK1bt9ZsSKS60NHJE5mn
      07Mp2IiUi5GREWvWrMHQ0LDCfAqFgpCQECZNmkTDhg1p27Yt48eP59KlSwBERERgZmaGoaEh
      Ojo6TJgwgVu3bpGens7vv/9O27ZtMTc3R0tLixEjRvDaa6+RkpJSyw5QmQTqPHe+nmGHjVSK
      7UR3ThcllidPmubDgmIyn2k+C5BKndlzo7BYlAcji+7O6RFsKbQttZ2Iq8+N8oXpymz7Hc5/
      XawNqwNJo7j49EXcpZNRKpEqJU1dvP8kdvskpAt8ioUt+rDA5r+8BEqkdZrc3Fx0dHRo0+aJ
      Dk63bt3IycmhoKCA9PR0evR4cji8WbNmNG/enIyMDNLT0zEwMCgREmlgYMDDhw+r7wBFP77y
      TzkglBRJoDqy/aQM2UkPLONXsciruOhtN8Z7HOVcgA9fWyby1denSKO4PKkMWcABZuvu5r9e
      8dB8IFZ9Irl8NR/IJ/bqPYYNa0rkFeVwiw2/SGtrSzpyDx+3b8mdsZfTMhkBB2aju/u/eJXS
      2y2PfKI2z2ZVvCUbjgUgCzjCN5PeoEGJPBa4FqpKFilNejp14Y3RDhhHniGw8O0eaRcC+M3a
      Dhs1CVusLfLz89HQ0FDJngJoaWnx8OFDsrOzycvLo379+qo0DQ0NlbZwVlYWenoljw4WpVU7
      nGjYahlPhBOVCiT+gEoCdVWhBCpKCdSdu8JILtLZbdOBTrqaQFOMR1rTefJlYrEiIzSSPy9E
      Yv9r8YruAQaY9DVgx+VoGATyq/0Z8VULNm+NINP+DSJCof/HHSHzNKGRf3Ih0p4yTFQBZdsd
      V03BUBdAl9adqviG5FbDmThsN1uOx+MwvRkXAhKwe8/spVBirMtoampSUFCAQvHkxVMKhYKm
      TZuio6NDvXr1VCJ4oNxc169fn+bNm3P//v1S7w8qSqs78XQF+SjqPZEaNZ7/C5sdSosMdTTt
      j65bOLH2OkT3kvBhx+b0v+vH9bQswu9a4PwGkAlgzPxfNlOGiVpGF4sJY9myIoj4kY05c28s
      803F4V9dtLW1yc7O5s6dO+jrK6fTP/74g/r166OhoYG+vj5xcXGYmirj8B48eEBaWhp6enro
      6+tz+fLlEiGR8fHxWFpa1uYeoAoSqDk55ALk3sLX8zBp1gMxrkye9I2+WGSG4ucTSeu+Jmjy
      BsY9QgncE0qC9UCMAXR7Y2oczY+bfJV1k8ujxGDKUDitsO0HNu7hemY+5GdyN+kOpU/E6KFU
      Ik1AqURauMswGIlDs8N4bggAh5FVm3REKkRLSwszMzP27dvH48ePSUlJ4eDBg5ibmwNgampK
      SEgI169fJzs7m59//pn27dujr69Pz549SUlJ4dKlSygUCnx9fREEgbZt29amAxRKoL52gJnD
      pUiHzyfI4CkJ1BAPxttKkQ6Zxo8F7/HNxxboUihPOjCVbdOGIJVKGTl5Hf4PiwoZIzG/waFD
      j3jzDeWyxNikM7/+Gop5/96FM0grRn/6OQNTtzFtiBSpdCST1/nzkKqiicmHW3EzCGLRu1ZI
      rUazYF8sWaXyNWeosxMav8xiiNSGj44Uvq+EVgwfY0J4MFhZ1j2pvLpEQECAag/5888/4+Dg
      gFQqJSAggKysLBYvXkxoaCgAUqmU9u3bY29vz9SpU7GxscHY2BiAtm3bMnHiRJYvX84777xD
      amoqzs7OgPKtEDNnzmTr1q0MGTKE8+fPM3fu3KqFRNbWScBkbxcm35hevvL6S93g4VwAAA6D
      SURBVE0uCXvm8UH8BI58bsPLrK/yIkXy4uLiOHjwIB9//HGtRYXVnT3Aq0KyNy6Tt3GzmyOr
      PV7uwf+iuXr1Ko6Oji82JPJVPgsuUjmiTKqIyCuM6AAiao0okypSKa/yGBBnABG1RnQAEbVG
      dAARtUZ0ABG1RnQAEbWm5mRSza14z+0EiS9QJrWUhphInedZZFIfPXrEl19+iYWFBf369WPO
      nDkl8i9fvvzJeJRIVDKqaWlpuLm5YWFhgUQiYfjw4QQEBAA1KJMacu47rJK+YM6mK5WWka2o
      AanTOs9Tkq6yFTUsGftq8CwyqZs2baJr166cOXOGixcvYmlpya5duwDliYV69erh6+urEsnY
      vXs3enp6/PPPP1hYWHD69GnCwsLw8PBg3759JCcn19xZIC3dnkxxtuY7z8sk8XYNSqO+rCgl
      XZ1fdDPqOEUyqQAnT56sMO/SpUtLRIQNHjyYn376CYDs7Gw0NTVLRX4BdO3ala5du6o+d+/e
      nc6dO5OTk1OLe4D0MDa+Z4W5RILEcjRLDiWiKLwrLjoB1zc5KKeqwvVK+VKlhYLRiYkcWjAS
      cycvkkgnbGOhBKrEHKtxKzlbTNLo9rnVvFcoxTrazbdQvT4JL6fiwtMlPytnpUQSDy1gpHnh
      909JrY77YCbjPy+9vlKk+LO62LWuPJtG8eVYkpcTEuVF4yCRIJGsQKaIYctYCXMOPWl42qE5
      mC/2RQwfLpvigz83NxcfHx/VcejHjx+jq6tbpgMU5/79+2zZsgU9PT26dOkCwnNzQ/hhkqng
      dl75KS8jRvCcYiaM2XpdEIQ7wi+zxwtrgtOEPEEQ8tLOCW62Y4St15V5z7uZCpN+uPHEVJ5c
      WGs3W9iXnCMIgiDkXPcUpgz8WDj1WBAE4bzgZjpSmDJ9hrBWdlfIEQRBuL5VGDNyvRCZIwiC
      kCP8Ex8pXEt90qb39yQKGXlF9ZoJHx5JLUybJDyptuTn826mwsgp04UZa2XCXWUzhOtbxwhm
      UzYLkWl5giDkCde3TRBMiy64eNttzYQpnjHKOjNuC4m3H5fqH+G8m2A66Qeh2FULd35yEUxd
      fhLuCIIgCKnCL7PNBLfzec/5e9QO4eHh/1pd69evF+7evVtpvlu3bgmLFy8WLly4oPru6tWr
      wuDBgwVTU1Ohb9++wuTJk4WYmBhV+pUrVwSpVCqYm5sLu3btEnJylD9ytZdAJxZJOAHQoBnG
      I9zZ4tIDMnwJDk/kfLgtB4vltbsDZaq6FUqVpowZwHrVl4ZKqVI9gAxed/qajy0LI8vbd6Z7
      6hesXPCAdwYPZ+DgvvRq/sRcu05d0NUCmlnj7NiRCZHXwL7yRVnG6058/bFloXyrUmrV2mWW
      Uv4UqF+/jO6KC0GmPZmvpvdUHn3WaksXXYCyJFVL0nrkFOy2fcOROEdmNQ/k7HV7pg0QT6hX
      RGRkJIcPH2bp0qW0avUk2OjNN99UbWzz8vIIDg7m22+/xd3dnWbNmmFsbMz58+fJyMggKCiI
      //3vfyxfvrz6ewC7DXJWSp/6MgegNx+f2IljVXXcKpQqbUuPbsVeq6A3jC/P9eDyORlB57cy
      b9NqRn1zhIWmpUtmZ2VST6tql9m2RzeefnmDVhXLPhd6Upwcv2F5QByjm5zkruPSCqVa1Z24
      uDgCAgL49NNP0dF5WsXwCfXq1WPQoEFcuHCBlJQUmjVrpkrT09PjnXfe4ebNm8jl8lraA+iZ
      0q/3ZXatP6aUFCWX9IQgwgvX23oN9UmJi+OBQhnZX1WpUhXXZZxM1MFouDML13jwUZ87XI69
      q0rOyckFFGT+7s2mQxnFZFZTuHkrVylxGnScihVLC6VWfX5VXkPuvbKlVnuYIc3dy1e7fidT
      USjJmlKGRrxeQ/RT4ohTXjRPVE8daXbge5Sqp+oievp8nDp1Cjs7uzIH//79+zl8+LDqPUH+
      /v7cunWLDh06cO7cOcLCwlRvjUhOTiYiIoLGjRvX1ia4NQ6fr2Vw6iYmDZAgkdgw7sszFCmV
      mk6YT59rq7A1k2C1LqLqUqVF6GQRvsGZYWYSJGb2fP/IibnvtlemNXub9P0jsZSYIZ15EL1Z
      W3GV6gHtsRzRg3OLB2A+dApbEttRsWJpodTqvW+ZMECC5YS1ZUutapmy8Ad33gj4ABszCWbD
      5rDnWnbpfKYTmN/nGqtszZBYrXuiIt96JOMlIQQxlFdA9fSZqapMamZmJtHR0UyePLnMZ/0j
      R44kNjYWa2trzMzM2L17N0uWLEFfX582bdqwe/duBg8ejEQiYdasWYwcORITE5PqbIJffR7f
      ThRu/qPcLOVlJAr7ZpsJLj/dqdlKcq4LnlMGCh8rd/x1jn9zE/w0v//+u+Dm5qbasNYG4oqz
      ArKv7WGB+yluPMqDeo3oOcqdtQ41d5tO8nLCYVMyBk7r2TbsVRc9fXZEmVSRF44okyoi8goj
      OoCIWiPKpIpUyqs8BsQZQEStER1ARK0RHUBErREdQEStER1ARK2ptk6wSh/Mxo4ZX5xSitm9
      cPJ5GOrJoslFInn2zPniEFfraqRJ/h3Ofz0He1ulIJ/9nG1EvboPXkpQUzrBBQUF+Pr6Mnbs
      WKRSKePHjyckJESVFhAQoEpzcnIiPDwcqIHXoxdphOVnXsd74Qcs2NqeI3PfKjvzRXekn8Bq
      mSu1qQqQfnEN09ySGbHuB9b0aYl27n1izu4iLAZ6mdVixc9FOhfXzGZV8gg2HtiMcdN87kcG
      8sffUDvvVlfquN2YXlzb7cURGxvLnj17mDZtGmfOnKkwb3Gd4EePHqnkVXv37s3FixeJjIxk
      y5YttG7dmt9//52dO3diaGjIgwcPOHbsGB4eHrRv357Y2Fg2b95MmzZtai4mWFPXEKdJUnbu
      iSaZt8rW0bVwRVbrb2yIYvdqf4yW/crMPoWn+7VbYjRiGXXyJd+//cg6fyOW/ToTY30ATVr2
      saXCg6qvEEU6wUCFDvC0TnDDhg1VOsG9e/fGwsICCwsLlRRqz5496dKlCwqFgr/++gtjY2M6
      dOigqtPc3Jx//vmn9vYAF92luHjf4IbPMsbZuOCdjHIGUKmsX8Rd6sy6PV8zx94WqdSGcctO
      UCTjlX7VG9eJtkilUmzsZrA3HiCfGz6uTLSVIpXaYDdjCxFPL2uSY4hOf4v+phXokubfwMd1
      IrZFS7ctEao43PwbPrgWLp1s7Gbw9fk7hfrCRarw6URsmYat1J2LyobiXWTL1p45iz5giXfh
      VVRBqzg5OpIHb/Wn7OYqr3eynU3h9X7N+SIt5YvuhXrFlP6c7I2LdCnfeReVtWXatigyX2Jt
      48p0gjU0NFSDHyA0NBQNDQ2aNm1Kr169+P333/nzzz8pKCggJiaGpKQkunbtWnMOkJ95He99
      shIieI9k61h/YxTfn/TEqcwpIYustmNZe/A0AT4L6HrpMEHJwD0f3OYfRHeGN2dlMk7+9AlW
      TSA/ajNLAnvz9XEZMtlJPCyj+WTduZLidTk5ZNGSFoUhkhfdn+xTlOMjn6jNSwjs/TXHZYX6
      xdGfsO5cJuRHsXnBDgTH7ZyUyTjpYUn8qkUl9IUT97jzc5vlHAlwxYJMzq2bz0GN99h9Vobs
      9EHGN7xaqEVWNa3inOxMaNmC5pQmP2ozC3YIOG4/WXi98axa5EXV5I6zaGDyEduPnuPs5nfJ
      8PYl6iXWNq5MJ7iI7OxsduzYwdWrV5k5cyZaWlo0b96cBQsW8OmnnzJ48GA2bNiAi4sLurq6
      1V8C+X0ixQ9Apylv2pYUwctsNwH3+Ralwgyf0Ihuhl1ppA1oN6NxUbnLoUT2/4BT1i3RBmjU
      lfaNIPbXi9yLuMPEIZuemDC4Qyo8WXLVr08D7pOaBjQHC1cZMtfCdS+g1AC+R8SdiZQ0kwrx
      4VzUHsWqd9sr6+0+hSnWO9kVlkyRtDEWc/jSoXOhGF8UIedfZ+yeEYVayNqotJozL1dJq7i+
      ji7cT6WwuSWID7+I9qhVvKs0TvcpU7DeuYuw5OlVUJ5sQw+j1sptRJNmNKroXRMvgbZxZTrB
      AP/88w8eHh4MHz6cvn37qvLdunULT09P1qxZQ/v27YmPj2fz5s18+OGHNS2UXZLW3btUMPif
      D/3RG/FZZFr+j9PRCGP9XYRGpGNvW17t+oze6MOip/V7Yyuvv2u3zk/VrYVmufNo5VrFHY2M
      0d8VSkS6PeU2t9ap+9rGlekEZ2VlsXPnTqZOnUrHjiWXG/7+/lhaWqr2AIaGhnTv3p3Y2Ni6
      +X8A3d796RP6HRv975OLUif41n0wMDWDE9vxjH5IPpCfeZeYsFhKhg6bMHHGW4R+9THbI+8X
      6hBnkam6cRigNONJ9MN8IJ/MuzGExaaBQV8sco+y59gtZb0Je9jj/zoW/cpcvwEGvGEcj//x
      aB7mQ35mEjfvqC6ialrFJtP4qH8o363yLmxPLvcjTxNyGwz6WpB7dA/HlELLJOzZg//rFqia
      k3KLlHzIvR+Db+DVKvbuy6ltXJlO8OXLl+nQoUOpwQ/KF2OdPXuWu3eVceM3b97k8uXLNG3a
      tG46AK3sWeUxnswdTgyRShn+n9UE/A2apu+zZnoLZJ+Mw0oqxXb8YnbGZNGgVPH1eLsZELVS
      WV46cikXmzsyuAeAJqbvr2F6CxmfjLNCKrVl/OKdxGQ1AE0TPvxmBq8dmMlwqZTh84MwcNuA
      c7mjoRWjlyymTdAS7K1sGDX/IH8UT6uSVrE+tp97s7DNBT5ztEIqHcn7O/6kfhPQNPmQb2a8
      xoGZw5FKhzM/yAC3Dc7KwfnWYEal7cTRypbxbr7odKvqkK1b2sY1pROckJDA5s2bn/xfSirl
      nXfe4erVq5ibm2NqasqMGTOQSqXMnz+f4cOHY2xsLKpEVpf7txKp17QTTXQ1yb0fzJb5XyIs
      LmN5VecpW9tY1AkWqZC/A9axZM81HmYDOu2xdF7Dspdt8NdRbeN/Qyf4/4D1eRIQqaLWAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Income VA cb' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income Virginia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PGC HO INCOME' width='192'>
      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
      qYibNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PGC RO INCOME' width='192'>
      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
      25oSAIpt7X8AZzvW+5YzbOUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pgc ho seniors' width='192'>
      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
      Ahrp1RRWv5ftHjaXizlyRQWb2UAml0JWnUS2cKvNB9E0hWKxgsViAbXC8uwC9lgMl/Ex6QJV
      igUy6XVWVuIkVteYuD1EftutKhRzOZKJFeLxOOu5dUbuTG+/1UqBRDxOYnUdg93B0u1+FjPb
      71RoaoWNVJp8oUBqbZXZ8RFmd2BPWMxtkMkXUVSNSilN/+W+HVi2YLKa2EgkiMfjxOOLXD/f
      w/bvc6GQz+Yplwqk0hkUJUXfjcntt1opkU1vsLISZyW5xszwMOuPUxcoPTvEyHL67n1kZCqy
      su2+OqiM3OojVajcb1fZgXrj0sYKt0en79/zRpYV1B3Yh8qFDfrvjLzXbkXekZtfrI32MbFe
      ur8MZHlnSg03pm8zmsi9r92d+cwG+/vIFCv3l4OyAwu3uLbE7Yn59y1b5f6yfSyK4v27O2hY
      KhGNehAEkA7JbL/nZ2TP3r0Idh8OsxFR9FIubv+g0uqL0tpgIlQTRgJsgoawzW4KgNHuo2N3
      M4GaKAbAZZYomba/FKJ7D6GuatSEnCCo0CXtyDFAsHU/xXiFmogbBBAPqtvusoKRts69GD0B
      bEYDouihXNz+6RB7KMaeioNwTRAJsKgKRvPmqv9YBEAtl1mYGWE1YUNTSojOGiLbblWjlF1n
      cnIBq1kin83TcuCJ7beqyKzGZ1hKLCNpMhXJyYHIDlwwUlVSq/MsJFYwCAplzcL+rq3dTe9B
      5GKBmYlJknEbSqmIPdJE7fbnFrVcYm5qlNWEDbVSxOipJ7rtVjVKuVVGZxexmCTymTx7Dh/b
      fquyTHJ5inhiEVGTqRjcHIrdPWbTHgOTPWe1geWMpmqapqoV7dyJU1p6263mtXMnT2uZiqpp
      mqYp2Unt9dN3NHWbra7ND2nd18futqNq/RfOaDNruW22qmm5tRntzIX+++2OXe/WhubXtt3u
      ndOva5NZZbPVSkY7ffKclt92q5o2duEtbXituPmZKSXt7GtvaZltt5rVTr9+RsvLm0tBzoxp
      r58Z2nariclb2pXbU/eXbe/pt7WFbFHTNE17LPYAkeYmLt3spbDoRi3m0IKxHegCmYnVWrl+
      pQeX3URmbZWWju1vTRzeMIzd4FrvBpJaIaXaaLZvv1NhtvuxqWP0XL2OUVRIZeFQm2Pb7da1
      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
    </thumbnail>
  </thumbnails>
</workbook>
